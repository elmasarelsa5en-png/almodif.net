// ŸÜÿ∏ÿßŸÖ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿßŸÑÿßÿ≠ÿ™ÿ±ÿßŸÅŸä ŸÑŸÑÿ•ÿ¥ÿπÿßÿ±ÿßÿ™ - Ÿäÿ≥ÿ™ÿÆÿØŸÖ Web Audio API
// ÿ®ÿØŸàŸÜ ÿßŸÑÿ≠ÿßÿ¨ÿ© ŸÑŸÖŸÑŸÅÿßÿ™ ÿµŸàÿ™Ÿäÿ© ÿÆÿßÿ±ÿ¨Ÿäÿ©

export type NotificationSoundType = 'new-request' | 'approval' | 'rejection' | 'general';

/**
 * ÿ™ÿ¥ÿ∫ŸäŸÑ ÿµŸàÿ™ ÿ•ÿ¥ÿπÿßÿ± ÿ®ŸÜÿßÿ°Ÿã ÿπŸÑŸâ ÿßŸÑŸÜŸàÿπ
 */
export function playNotificationSound(type: NotificationSoundType = 'general') {
  try {
    console.log(`üîä Playing ${type} sound...`);
    
    const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();
    
    switch (type) {
      case 'new-request':
        playNewRequestSound(audioContext);
        break;
      case 'approval':
        playApprovalSound(audioContext);
        break;
      case 'rejection':
        playRejectionSound(audioContext);
        break;
      case 'general':
      default:
        playGeneralSound(audioContext);
        break;
    }
    
    console.log(`‚úÖ ${type} sound played successfully!`);
  } catch (error) {
    console.error('‚ùå Failed to play sound:', error);
  }
}

/**
 * ÿµŸàÿ™ ÿ∑ŸÑÿ® ÿ¨ÿØŸäÿØ - ŸÜÿ∫ŸÖÿ© ÿµÿßÿπÿØÿ© ŸÑÿßŸÅÿ™ÿ© ŸÑŸÑÿßŸÜÿ™ÿ®ÿßŸá üîî
 * 3 ŸÜÿ∫ŸÖÿßÿ™ ŸÖÿ™ÿµÿßÿπÿØÿ©: 600Hz ‚Üí 800Hz ‚Üí 1000Hz
 * ŸÑŸÑŸÖŸàÿ∏ŸÅ ÿßŸÑÿ∞Ÿä ÿ≥ŸäŸÜŸÅÿ∞ ÿßŸÑÿ∑ŸÑÿ®
 */
function playNewRequestSound(audioContext: AudioContext) {
  const now = audioContext.currentTime;
  const duration = 0.15; // ŸÉŸÑ ŸÜÿ∫ŸÖÿ© 150ms
  
  // ÿßŸÑŸÜÿ∫ŸÖÿ© 1: 600Hz
  createTone(audioContext, 600, now, duration, 0.3);
  
  // ÿßŸÑŸÜÿ∫ŸÖÿ© 2: 800Hz
  createTone(audioContext, 800, now + duration + 0.05, duration, 0.35);
  
  // ÿßŸÑŸÜÿ∫ŸÖÿ© 3: 1000Hz (ÿ£ÿπŸÑŸâ Ÿàÿ£ŸÇŸàŸâ)
  createTone(audioContext, 1000, now + (duration + 0.05) * 2, duration, 0.4);
}

/**
 * ÿµŸàÿ™ ÿßŸÑŸÖŸàÿßŸÅŸÇÿ© - ŸÜÿ∫ŸÖÿ© ŸÖÿ®Ÿáÿ¨ÿ© ÿµÿßÿπÿØÿ© ‚úÖ
 * ŸÜÿ∫ŸÖÿ™ŸäŸÜ ÿ≥ÿ±Ÿäÿπÿ™ŸäŸÜ: 800Hz ‚Üí 1200Hz
 */
function playApprovalSound(audioContext: AudioContext) {
  const now = audioContext.currentTime;
  const duration = 0.12;
  
  // ŸÜÿ∫ŸÖÿ© ŸÖŸÜÿÆŸÅÿ∂ÿ© ÿ´ŸÖ ÿπÿßŸÑŸäÿ© (Ÿäÿπÿ®ÿ± ÿπŸÜ ÿßŸÑŸÜÿ¨ÿßÿ≠)
  createTone(audioContext, 800, now, duration, 0.35);
  createTone(audioContext, 1200, now + duration + 0.03, duration * 1.5, 0.4);
}

/**
 * ÿµŸàÿ™ ÿßŸÑÿ±ŸÅÿ∂ - ŸÜÿ∫ŸÖÿ© Ÿáÿßÿ®ÿ∑ÿ© ‚ùå
 * ŸÜÿ∫ŸÖÿ™ŸäŸÜ: 700Hz ‚Üí 400Hz
 */
function playRejectionSound(audioContext: AudioContext) {
  const now = audioContext.currentTime;
  const duration = 0.2;
  
  // ŸÜÿ∫ŸÖÿ© ÿπÿßŸÑŸäÿ© ÿ´ŸÖ ŸÖŸÜÿÆŸÅÿ∂ÿ© (Ÿäÿπÿ®ÿ± ÿπŸÜ ÿßŸÑÿ±ŸÅÿ∂)
  createTone(audioContext, 700, now, duration, 0.3);
  createTone(audioContext, 400, now + duration + 0.05, duration * 1.2, 0.25);
}

/**
 * ÿµŸàÿ™ ÿπÿßŸÖ - ŸÜÿ∫ŸÖÿ© ÿ®ÿ≥Ÿäÿ∑ÿ© ŸÖÿ≤ÿØŸàÿ¨ÿ© ‚ÑπÔ∏è
 * ŸÑŸÑÿ•ÿ¥ÿπÿßÿ±ÿßÿ™ ÿßŸÑÿπÿßÿØŸäÿ©
 */
function playGeneralSound(audioContext: AudioContext) {
  const now = audioContext.currentTime;
  const duration = 0.15;
  
  // ŸÜÿ∫ŸÖÿ™ŸäŸÜ ŸÖÿ™ŸÖÿßÿ´ŸÑÿ™ŸäŸÜ
  createTone(audioContext, 900, now, duration, 0.3);
  createTone(audioContext, 900, now + duration + 0.1, duration, 0.3);
}

/**
 * ÿØÿßŸÑÿ© ŸÖÿ≥ÿßÿπÿØÿ© ŸÑÿ•ŸÜÿ¥ÿßÿ° ŸÜÿ∫ŸÖÿ© Ÿàÿßÿ≠ÿØÿ©
 */
function createTone(
  audioContext: AudioContext,
  frequency: number,
  startTime: number,
  duration: number,
  volume: number
) {
  // Oscillator ŸÑŸÑÿ™ÿ±ÿØÿØ
  const oscillator = audioContext.createOscillator();
  const gainNode = audioContext.createGain();
  
  oscillator.connect(gainNode);
  gainNode.connect(audioContext.destination);
  
  oscillator.frequency.value = frequency;
  oscillator.type = 'sine'; // ŸÖŸàÿ¨ÿ© ÿ≥ŸÑÿ≥ÿ©
  
  // Envelope: fade in/out ÿ≥ÿ±Ÿäÿπ ŸÑŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ÿµŸàÿ™ ÿßÿ≠ÿ™ÿ±ÿßŸÅŸä
  gainNode.gain.setValueAtTime(0, startTime);
  gainNode.gain.linearRampToValueAtTime(volume, startTime + 0.02); // fade in
  gainNode.gain.linearRampToValueAtTime(volume * 0.7, startTime + duration * 0.5); // sustain
  gainNode.gain.linearRampToValueAtTime(0, startTime + duration); // fade out
  
  oscillator.start(startTime);
  oscillator.stop(startTime + duration);
}

/**
 * ÿßÿÆÿ™ÿ®ÿßÿ± ÿ¨ŸÖŸäÿπ ÿßŸÑÿ£ÿµŸàÿßÿ™ ÿ®ÿßŸÑÿ™ÿ±ÿ™Ÿäÿ® (ŸÑŸÑÿ™ÿ∑ŸàŸäÿ± ŸÅŸÇÿ∑)
 */
export function testAllSounds() {
  console.log('üéµ Testing all notification sounds...');
  
  setTimeout(() => {
    console.log('1Ô∏è‚É£ New Request Sound (ÿ∑ŸÑÿ® ÿ¨ÿØŸäÿØ)');
    playNotificationSound('new-request');
  }, 0);
  
  setTimeout(() => {
    console.log('2Ô∏è‚É£ Approval Sound (ŸÖŸàÿßŸÅŸÇÿ©)');
    playNotificationSound('approval');
  }, 1500);
  
  setTimeout(() => {
    console.log('3Ô∏è‚É£ Rejection Sound (ÿ±ŸÅÿ∂)');
    playNotificationSound('rejection');
  }, 3000);
  
  setTimeout(() => {
    console.log('4Ô∏è‚É£ General Sound (ÿ•ÿ¥ÿπÿßÿ± ÿπÿßŸÖ)');
    playNotificationSound('general');
  }, 4500);
  
  console.log('‚úÖ All sounds will play in sequence (every 1.5 seconds)');
}
